name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
      - name: Install server dependencies
        run: yarn install
      - name: Install client dependencies
        working-directory: ./client
        run: yarn install
      - name: Lint client code
        working-directory: ./client
        run: yarn lint
      - name: Run server tests (Jest)
        run: yarn test --ci
      - name: Build client
        working-directory: ./client
        run: yarn build

  deploy-and-run:
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Deploy to EC2 and Start Application
        env:
          PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USER }}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER}@${HOST} '
            set -e
            echo "Deploying to EC2..."
            if [ ! -d ~/capstone/staging ]; then
              echo "Creating staging directory..."
              mkdir -p ~/capstone/staging
            fi
            cd ~/capstone/staging
            git fetch origin main
            git reset --hard origin/main
            echo "Installing dependencies..."
            yarn install
            cd client
            yarn install
            echo "Building client..."
            yarn build
            cd ../api
            echo "Stopping and starting backend..."
            pm2 stop backend || true
            pm2 start index.js --name backend --env production
            cd ../client
            echo "Stopping and starting frontend..."
            pm2 stop frontend || true
            pm2 start npm --name frontend -- run serve
            pm2 save
            echo "Deployment completed successfully!"
          '
